// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: ddl.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeySpace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Durable     bool              `protobuf:"varint,2,opt,name=durable,proto3" json:"durable,omitempty"`
	Tables      []*Table          `protobuf:"bytes,3,rep,name=tables,proto3" json:"tables,omitempty"`
	Replication map[string]string `protobuf:"bytes,4,rep,name=replication,proto3" json:"replication,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags        map[string]string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *KeySpace) Reset() {
	*x = KeySpace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeySpace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeySpace) ProtoMessage() {}

func (x *KeySpace) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeySpace.ProtoReflect.Descriptor instead.
func (*KeySpace) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{0}
}

func (x *KeySpace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KeySpace) GetDurable() bool {
	if x != nil {
		return x.Durable
	}
	return false
}

func (x *KeySpace) GetTables() []*Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *KeySpace) GetReplication() map[string]string {
	if x != nil {
		return x.Replication
	}
	return nil
}

func (x *KeySpace) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cols []*Column         `protobuf:"bytes,2,rep,name=cols,proto3" json:"cols,omitempty"`
	Tags map[string]string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{1}
}

func (x *Table) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Table) GetCols() []*Column {
	if x != nil {
		return x.Cols
	}
	return nil
}

func (x *Table) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type    string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Static  bool   `protobuf:"varint,3,opt,name=static,proto3" json:"static,omitempty"`
	Primary bool   `protobuf:"varint,4,opt,name=primary,proto3" json:"primary,omitempty"`
}

func (x *Column) Reset() {
	*x = Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{2}
}

func (x *Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Column) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Column) GetStatic() bool {
	if x != nil {
		return x.Static
	}
	return false
}

func (x *Column) GetPrimary() bool {
	if x != nil {
		return x.Primary
	}
	return false
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{3}
}

type CreateKeySpacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeySpaces []*KeySpace `protobuf:"bytes,1,rep,name=keySpaces,proto3" json:"keySpaces,omitempty"`
}

func (x *CreateKeySpacesRequest) Reset() {
	*x = CreateKeySpacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKeySpacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeySpacesRequest) ProtoMessage() {}

func (x *CreateKeySpacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeySpacesRequest.ProtoReflect.Descriptor instead.
func (*CreateKeySpacesRequest) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{4}
}

func (x *CreateKeySpacesRequest) GetKeySpaces() []*KeySpace {
	if x != nil {
		return x.KeySpaces
	}
	return nil
}

type AlterKeySpacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeySpaces []*KeySpace `protobuf:"bytes,1,rep,name=keySpaces,proto3" json:"keySpaces,omitempty"`
}

func (x *AlterKeySpacesRequest) Reset() {
	*x = AlterKeySpacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddl_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterKeySpacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterKeySpacesRequest) ProtoMessage() {}

func (x *AlterKeySpacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterKeySpacesRequest.ProtoReflect.Descriptor instead.
func (*AlterKeySpacesRequest) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{5}
}

func (x *AlterKeySpacesRequest) GetKeySpaces() []*KeySpace {
	if x != nil {
		return x.KeySpaces
	}
	return nil
}

type DropKeySpacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeySpaces []string `protobuf:"bytes,1,rep,name=keySpaces,proto3" json:"keySpaces,omitempty"`
}

func (x *DropKeySpacesRequest) Reset() {
	*x = DropKeySpacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddl_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropKeySpacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropKeySpacesRequest) ProtoMessage() {}

func (x *DropKeySpacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropKeySpacesRequest.ProtoReflect.Descriptor instead.
func (*DropKeySpacesRequest) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{6}
}

func (x *DropKeySpacesRequest) GetKeySpaces() []string {
	if x != nil {
		return x.KeySpaces
	}
	return nil
}

type ListKeySpacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListKeySpacesRequest) Reset() {
	*x = ListKeySpacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddl_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKeySpacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeySpacesRequest) ProtoMessage() {}

func (x *ListKeySpacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeySpacesRequest.ProtoReflect.Descriptor instead.
func (*ListKeySpacesRequest) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{7}
}

type CreateTablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables []*Table `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
}

func (x *CreateTablesRequest) Reset() {
	*x = CreateTablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddl_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTablesRequest) ProtoMessage() {}

func (x *CreateTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTablesRequest.ProtoReflect.Descriptor instead.
func (*CreateTablesRequest) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{8}
}

func (x *CreateTablesRequest) GetTables() []*Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

type AlterTablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables []*Table `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
}

func (x *AlterTablesRequest) Reset() {
	*x = AlterTablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddl_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterTablesRequest) ProtoMessage() {}

func (x *AlterTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterTablesRequest.ProtoReflect.Descriptor instead.
func (*AlterTablesRequest) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{9}
}

func (x *AlterTablesRequest) GetTables() []*Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

type DropTablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables []string `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
}

func (x *DropTablesRequest) Reset() {
	*x = DropTablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddl_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropTablesRequest) ProtoMessage() {}

func (x *DropTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropTablesRequest.ProtoReflect.Descriptor instead.
func (*DropTablesRequest) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{10}
}

func (x *DropTablesRequest) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

type ListTablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTablesRequest) Reset() {
	*x = ListTablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddl_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTablesRequest) ProtoMessage() {}

func (x *ListTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTablesRequest.ProtoReflect.Descriptor instead.
func (*ListTablesRequest) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{11}
}

var File_ddl_proto protoreflect.FileDescriptor

var file_ddl_proto_rawDesc = []byte{
	0x0a, 0x09, 0x64, 0x64, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x71, 0x6c,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x22, 0xdc, 0x02, 0x0a, 0x08, 0x4b, 0x65, 0x79,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x75, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x75, 0x72, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12,
	0x48, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x54,
	0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x3e,
	0x0a, 0x10, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37,
	0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xaf, 0x01, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x30,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63,
	0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x62, 0x0a, 0x06, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x07, 0x0a,
	0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x4d, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x15, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33,
	0x0a, 0x09, 0x6b, 0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x4b, 0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x14, 0x44, 0x72, 0x6f, 0x70, 0x4b, 0x65, 0x79, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6b,
	0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x6b, 0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x41, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x12, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x71, 0x6c,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x2b, 0x0a, 0x11, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0xa4, 0x05, 0x0a, 0x03, 0x44, 0x44, 0x4c,
	0x12, 0x4a, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x0e,
	0x41, 0x6c, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x22,
	0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0d, 0x44, 0x72, 0x6f, 0x70, 0x4b, 0x65,
	0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x71, 0x6c,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46,
	0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12,
	0x21, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x63, 0x71, 0x6c, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x2e,
	0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x0b, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x12, 0x1f, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0a, 0x44, 0x72, 0x6f, 0x70, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0a, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x2e, 0x63, 0x71, 0x6c, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x63, 0x71,
	0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42,
	0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_ddl_proto_rawDescOnce sync.Once
	file_ddl_proto_rawDescData = file_ddl_proto_rawDesc
)

func file_ddl_proto_rawDescGZIP() []byte {
	file_ddl_proto_rawDescOnce.Do(func() {
		file_ddl_proto_rawDescData = protoimpl.X.CompressGZIP(file_ddl_proto_rawDescData)
	})
	return file_ddl_proto_rawDescData
}

var file_ddl_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_ddl_proto_goTypes = []interface{}{
	(*KeySpace)(nil),               // 0: cql.grpc.v1.KeySpace
	(*Table)(nil),                  // 1: cql.grpc.v1.Table
	(*Column)(nil),                 // 2: cql.grpc.v1.Column
	(*Empty)(nil),                  // 3: cql.grpc.v1.Empty
	(*CreateKeySpacesRequest)(nil), // 4: cql.grpc.v1.CreateKeySpacesRequest
	(*AlterKeySpacesRequest)(nil),  // 5: cql.grpc.v1.AlterKeySpacesRequest
	(*DropKeySpacesRequest)(nil),   // 6: cql.grpc.v1.DropKeySpacesRequest
	(*ListKeySpacesRequest)(nil),   // 7: cql.grpc.v1.ListKeySpacesRequest
	(*CreateTablesRequest)(nil),    // 8: cql.grpc.v1.CreateTablesRequest
	(*AlterTablesRequest)(nil),     // 9: cql.grpc.v1.AlterTablesRequest
	(*DropTablesRequest)(nil),      // 10: cql.grpc.v1.DropTablesRequest
	(*ListTablesRequest)(nil),      // 11: cql.grpc.v1.ListTablesRequest
	nil,                            // 12: cql.grpc.v1.KeySpace.ReplicationEntry
	nil,                            // 13: cql.grpc.v1.KeySpace.TagsEntry
	nil,                            // 14: cql.grpc.v1.Table.TagsEntry
}
var file_ddl_proto_depIdxs = []int32{
	1,  // 0: cql.grpc.v1.KeySpace.tables:type_name -> cql.grpc.v1.Table
	12, // 1: cql.grpc.v1.KeySpace.replication:type_name -> cql.grpc.v1.KeySpace.ReplicationEntry
	13, // 2: cql.grpc.v1.KeySpace.tags:type_name -> cql.grpc.v1.KeySpace.TagsEntry
	2,  // 3: cql.grpc.v1.Table.cols:type_name -> cql.grpc.v1.Column
	14, // 4: cql.grpc.v1.Table.tags:type_name -> cql.grpc.v1.Table.TagsEntry
	0,  // 5: cql.grpc.v1.CreateKeySpacesRequest.keySpaces:type_name -> cql.grpc.v1.KeySpace
	0,  // 6: cql.grpc.v1.AlterKeySpacesRequest.keySpaces:type_name -> cql.grpc.v1.KeySpace
	1,  // 7: cql.grpc.v1.CreateTablesRequest.tables:type_name -> cql.grpc.v1.Table
	1,  // 8: cql.grpc.v1.AlterTablesRequest.tables:type_name -> cql.grpc.v1.Table
	4,  // 9: cql.grpc.v1.DDL.CreateKeySpaces:input_type -> cql.grpc.v1.CreateKeySpacesRequest
	5,  // 10: cql.grpc.v1.DDL.AlterKeySpaces:input_type -> cql.grpc.v1.AlterKeySpacesRequest
	6,  // 11: cql.grpc.v1.DDL.DropKeySpaces:input_type -> cql.grpc.v1.DropKeySpacesRequest
	7,  // 12: cql.grpc.v1.DDL.ListKeySpaces:input_type -> cql.grpc.v1.ListKeySpacesRequest
	3,  // 13: cql.grpc.v1.DDL.GetKeySpace:input_type -> cql.grpc.v1.Empty
	8,  // 14: cql.grpc.v1.DDL.CreateTables:input_type -> cql.grpc.v1.CreateTablesRequest
	9,  // 15: cql.grpc.v1.DDL.AlterTables:input_type -> cql.grpc.v1.AlterTablesRequest
	10, // 16: cql.grpc.v1.DDL.DropTables:input_type -> cql.grpc.v1.DropTablesRequest
	11, // 17: cql.grpc.v1.DDL.ListTables:input_type -> cql.grpc.v1.ListTablesRequest
	3,  // 18: cql.grpc.v1.DDL.GetTable:input_type -> cql.grpc.v1.Empty
	3,  // 19: cql.grpc.v1.DDL.CreateKeySpaces:output_type -> cql.grpc.v1.Empty
	3,  // 20: cql.grpc.v1.DDL.AlterKeySpaces:output_type -> cql.grpc.v1.Empty
	3,  // 21: cql.grpc.v1.DDL.DropKeySpaces:output_type -> cql.grpc.v1.Empty
	3,  // 22: cql.grpc.v1.DDL.ListKeySpaces:output_type -> cql.grpc.v1.Empty
	3,  // 23: cql.grpc.v1.DDL.GetKeySpace:output_type -> cql.grpc.v1.Empty
	3,  // 24: cql.grpc.v1.DDL.CreateTables:output_type -> cql.grpc.v1.Empty
	3,  // 25: cql.grpc.v1.DDL.AlterTables:output_type -> cql.grpc.v1.Empty
	3,  // 26: cql.grpc.v1.DDL.DropTables:output_type -> cql.grpc.v1.Empty
	3,  // 27: cql.grpc.v1.DDL.ListTables:output_type -> cql.grpc.v1.Empty
	3,  // 28: cql.grpc.v1.DDL.GetTable:output_type -> cql.grpc.v1.Empty
	19, // [19:29] is the sub-list for method output_type
	9,  // [9:19] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_ddl_proto_init() }
func file_ddl_proto_init() {
	if File_ddl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ddl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeySpace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKeySpacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddl_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterKeySpacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddl_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropKeySpacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddl_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKeySpacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddl_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddl_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterTablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddl_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropTablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddl_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ddl_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ddl_proto_goTypes,
		DependencyIndexes: file_ddl_proto_depIdxs,
		MessageInfos:      file_ddl_proto_msgTypes,
	}.Build()
	File_ddl_proto = out.File
	file_ddl_proto_rawDesc = nil
	file_ddl_proto_goTypes = nil
	file_ddl_proto_depIdxs = nil
}
